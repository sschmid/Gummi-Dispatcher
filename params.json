{"tagline":"Observe and dispatch any objects","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"## Gummi Dispatcher\r\n![Gummi Dispatcher Logo](http://sschmid.com/Libs/Gummi-Dispatcher/Gummi-Dispatcher-128.png)\r\n\r\nObserve and dispatch any objects.\r\n\r\n## Features\r\n* Dispatch any object (no NSNotification like in NSNotificationCenter)\r\n* Add observers with priority\r\n\r\n## How to use Gummi Dispatcher\r\n\r\n#### Add an observer an dispatch objects\r\n```objective-c\r\n// Create your own dispatcher\r\nGDDispatcher *dispatcher = [[GDDispatcher alloc] init];\r\n\r\n// or use the shared dispatcher\r\nGDDispatcher *dispatcher = [GDDispatcher sharedDispatcher];\r\n\r\n[dispatcher addObserver:self forObject:[Greeting class]\r\n           withSelector:@selector(doSthLast:) priority:-5];\r\n[dispatcher addObserver:self forObject:[Greeting class]\r\n           withSelector:@selector(doSthFirst:) priority:10];\r\n\r\n[dispatcher dispatchObject:[[Greeting alloc] initWithString:@\"Hello\"]];\r\n\r\n// Logs\r\n// Got greeting first: Hello\r\n// Got greeting last: Hello\r\n```\r\n\r\n```objective-c\r\n- (void)doSthFirst:(Greeting *)greeting {\r\n    NSLog(@\"Got greeting first: %@\", greeting.string);\r\n}\r\n\r\n- (void)doSthLast:(Greeting *)greeting {\r\n    NSLog(@\"Got greeting last: %@\", greeting.string);\r\n}\r\n```\r\n## Other projects using Gummi Dispatcher\r\n\r\n* [Gummi Commander] (https://github.com/sschmid/Gummi-Commander) Event Command Mapping System for Objective-C\r\n\r\nIf you enjoy using Gummi Dispatcher in your projects let me know, and I'll mention your projects here.\r\n\r\n[Gummi Injection]: http://sschmid.github.com/Gummi-Injection/\r\n","name":"Gummi Dispatcher","google":""}